### MY SHORTCUTS ### 

# open thunar
alt + Return
	thunar

# open firefox
alt + p
	firefox

super + x
	betterlockscreen -l dimblur
## laptop shortcuts ##

XF86AudioRaiseVolume
	amixer sset Master 5+ unmute

XF86AudioLowerVolume
	amixer sset Master 5- unmute

XF86AudioMute
	amixer sset Master toggle

alt + x
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause

alt + z
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous

alt + c
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next

XF86MonBrightnessDown
	xbacklight -dec 10%

XF86MonBrightnessUp
	xbacklight -inc 10%

# Print screen
# Without the sleep scrot crashes with:
# giblib error: couldn't grab keyboard:Resource temporarily unavailable
super + control + 9
    sleep 0.2; \
    scrot -s $HOME/'pictures/Screenshots/%Y-%m-%d_%H%M%S-$wx$h_scrot.png'

super + control + 0
    scrot $HOME/'pictures/Screenshots/%Y-%m-%d_%H%M%S-$wx$h_scrot.png'


### END OF MY SHORTCUTS ###

#
# wm independent hotkeys
#

# terminal emulator
super + Return
	alacritty

# program launcher
super + d
	dmenu_run

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y


# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}


super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}
	

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {h,j,k,l}
	bspc node -v {-20 0,0 20,0 -20,20 0}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
# super + {_,shift + }{1-9,0}
# 	bspc {desktop -f,node -d} '^{1-9,10}'

### special focus for multi-monitor ###
# works the same in normal mode but allows
# multi monitor to work properly

super + {_,shift + } 1
	bspc {desktop -f, node -d} I
	
super + {_,shift + } 2
	bspc {desktop -f, node -d} II

super + {_,shift + } 3
	bspc {desktop -f, node -d} III

super + {_,shift + } 4
	bspc {desktop -f, node -d} IV

super + {_,shift + } 5
	bspc {desktop -f, node -d} V

super + {_,shift + } 6
	bspc {desktop -f, node -d} VI

super + {_,shift + } 7
	bspc {desktop -f, node -d} VII

super + {_,shift + } 8
	bspc {desktop -f, node -d} VIII

super + {_,shift + } 9
	bspc {desktop -f, node -d} IX

super + {_,shift + } 0
	bspc {desktop -f, node -d} X
